{% comment %}
  product-template.liquid
  Enhanced product detail template for VoidBloom architecture
  
  @MutationCompatible: VoidBloom
  @StrategyProfile: quantum-entangled
  @Version: 1.0.0
{% endcomment %}

<div class="product-nexus" data-product-id="{{ product.id | escape }}">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <!-- Left: Visual Cortex -->
    <div class="visual-cortex">
      {% render 'product-hologram', product: product %}
      
      <div class="mt-4 trauma-indicators">
        {% for trauma in product.metafields.cybercore.trauma_codes | split: "," %}
          <span class="trauma-indicator bg-neutral-900 text-neutral-200 px-3 py-1 rounded-full text-xs
            hover:scale-110 transition-all duration-300" 
            data-glitch-on-hover="true">
            {{ trauma | strip | escape }}
          </span>
        {% endfor %}
      </div>
    </div>
    
    <!-- Right: Lore Cortex -->
    <div class="lore-cortex">
      <h1 class="text-2xl md:text-3xl font-cyber mb-2">{{ product.title | escape }}</h1>
      
      <div class="price-node mb-6">
        <span class="text-xl">{{ product.price | money }}</span>
        {% if product.compare_at_price > product.price %}
          <span class="ml-2 text-sm line-through opacity-60">
            {{ product.compare_at_price | money }}
          </span>
        {% endif %}
      </div>
      
      <div class="product-lore mb-6 border-l-2 border-neutral-800 pl-4">
        {{ product.metafields.lore.origin | escape }}
      </div>
      
      <div class="dimensional-depth-marker mb-4">
        <div class="flex items-center">
          <span class="text-xs uppercase tracking-wider opacity-70 mr-2">Dimensional Depth</span>
          <div class="h-1 flex-1 bg-neutral-800 rounded-full overflow-hidden">
            <div class="depth-fill h-full" style="width: {{ product.metafields.cybercore.dimensional_depth | times: 33.33 | escape }}%"></div>
          </div>
          <span class="ml-2 text-xs">{{ product.metafields.cybercore.dimensional_depth | escape }}/3</span>
        </div>
      </div>
      
      {% render 'product-form', product: product %}
      
      <div class="product-tabs mt-8">
        <div class="tabs-header">
          <button class="tab-button active" data-tab="technical">Technical Fragments</button>
          <button class="tab-button" data-tab="trauma-resonance">Trauma Resonance</button>
          <button class="tab-button" data-tab="dimensional">Dimensional Analysis</button>
        </div>
        
        <div class="tabs-content mt-4">
          <div class="tab-panel active" data-panel="technical">
            <div class="technical-specs">
              {% for spec in product.metafields.specs %}
                <div class="spec-line">
                  <span class="spec-name">{{ spec.first | escape }}</span>
                  <span class="spec-value">{{ spec.last | escape }}</span>
                </div>
              {% endfor %}
              
              {{ product.description | escape }}
            </div>
          </div>
          
          <div class="tab-panel" data-panel="trauma-resonance">
            <div class="trauma-analysis">
              <div class="trauma-map"></div>
              <div class="trauma-description">
                {% assign trauma_codes = product.metafields.cybercore.trauma_codes | split: "," %}
                {% if trauma_codes.size > 0 %}
                  <h3>Primary Trauma-Coding: {{ trauma_codes.first | escape }}</h3>
                  <p class="text-sm opacity-80">This artifact resonates primarily with the {{ trauma_codes.first | escape }} memory-pattern. It may trigger associative memory callbacks when engaged with other items of similar coding.</p>
                  
                  {% if trauma_codes.size > 1 %}
                    <h4 class="mt-4">Secondary Patterns</h4>
                    <ul class="list-disc pl-5 text-sm opacity-70">
                      {% for trauma in trauma_codes offset: 1 %}
                        <li>{{ trauma | strip | escape }}</li>
                      {% endfor %}
                    </ul>
                  {% endif %}
                {% else %}
                  <p class="text-sm opacity-70">No trauma-coding detected for this artifact.</p>
                {% endif %}
              </div>
            </div>
          </div>
          
          <div class="tab-panel" data-panel="dimensional">
            <div class="dimensional-analysis">
              {% assign depth = product.metafields.cybercore.dimensional_depth | default: 1 %}
              <div class="depth-visualization depth-{{ depth | escape }}">
                <div class="depth-layers">
                  {% for i in (1..3) %}
                    <div class="depth-layer {% if i <= depth %}active{% endif %}" data-layer="{{ i | escape }}"></div>
                  {% endfor %}
                </div>
                <div class="depth-description">
                  {% case depth %}
                    {% when 1 %}
                      <p>This artifact exists primarily in surface reality, with minimal incursion into deeper dimensions. Its effects are readily perceivable through conventional sensory apparatus.</p>
                    {% when 2 %}
                      <p>This artifact breaches the second dimensional threshold, exhibiting properties that may momentarily escape conventional perception. Recursive thought patterns have been observed during extended interaction.</p>
                    {% when 3 %}
                      <p>Warning: Deep-dimensional artifact. This item exists simultaneously across multiple planes of cognitive reality and may induce memory-splits or consciousness fragmentation in susceptible users.</p>
                    {% else %}
                      <p>Dimensional analysis unavailable for this artifact.</p>
                  {% endcase %}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Customer Testimonials Section -->
  <div class="customer-testimonials mt-12 mb-8">
    <h2 class="text-xl mb-4 font-cyber">Neural Imprint Feedback</h2>
    <div class="testimonials-container">
      {% if product.metafields.reviews.testimonials %}
        <div class="testimonials-grid grid grid-cols-1 md:grid-cols-2 gap-4">
          {% for testimonial in product.metafields.reviews.testimonials %}
            <div class="testimonial-card bg-neutral-900 bg-opacity-50 p-4 rounded-lg border border-neutral-800 hover:border-purple-800 transition-all duration-300">
              <div class="testimonial-header flex justify-between items-center mb-2">
                <div class="user-info flex items-center">
                  <div class="user-avatar w-8 h-8 rounded-full bg-neutral-800 overflow-hidden flex items-center justify-center mr-2">
                    {% if testimonial.avatar %}
                      <img src="{{ testimonial.avatar | escape }}" alt="{{ testimonial.name | escape }}" class="w-full h-full object-cover">
                    {% else %}
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                        <circle cx="12" cy="7" r="4"></circle>
                      </svg>
                    {% endif %}
                  </div>
                  <span class="user-name text-sm font-cyber">{{ testimonial.name | escape }}</span>
                </div>
                <div class="rating flex">
                  {% assign rating = testimonial.rating | default: 5 %}
                  {% for i in (1..5) %}
                    <span class="star {% if i <= rating %}active{% endif %}">★</span>
                  {% endfor %}
                </div>
              </div>
              <div class="testimonial-content text-sm opacity-90 mb-2">
                {{ testimonial.content | escape }}
              </div>
              <div class="testimonial-meta text-xs opacity-60 flex justify-between">
                <span>{{ testimonial.date | default: 'now' | date: '%b %d, %Y' }}</span>
                <span class="verification-badge" data-verified="{{ testimonial.verified | default: true }}">
                  {% if testimonial.verified != false %}
                    <span class="text-green-400">✓ Verified Purchase</span>
                  {% endif %}
                </span>
              </div>
            </div>
          {% endfor %}
        </div>
      {% else %}
        <div class="no-reviews bg-neutral-900 bg-opacity-30 p-6 rounded-lg border border-neutral-800 text-center">
          <p class="text-sm opacity-70 mb-4">No neural feedback recorded for this artifact yet.</p>
          <button class="leave-review-btn bg-purple-900 hover:bg-purple-800 text-white py-2 px-4 rounded-md transition-colors duration-300 text-sm">
            Record Your Experience
          </button>
        </div>
      {% endif %}
    </div>
  </div>
  
  <!-- Related Memory Patterns -->
  {% if recommendations.performed %}
    <div class="memory-patterns mt-12">
      <h2 class="text-xl mb-4 font-cyber">Related Memory Patterns</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
        {% for product in recommendations.products %}
          {% render 'product-cell', product: product, trauma_resonance: product.metafields.cybercore.trauma_codes | split: "," | first | escape %}
        {% endfor %}
      </div>
    </div>
  {% endif %}
</div>

<style>
  .product-nexus {
    position: relative;
    padding: 2rem;
    color: rgba(255, 255, 255, 0.9);
  }
  
  .visual-cortex {
    position: relative;
  }
  
  .trauma-indicators {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .trauma-indicator {
    font-family: 'Courier New', monospace;
    position: relative;
    overflow: hidden;
    border-left: 2px solid rgba(153, 0, 255, 0.7);
  }
  
  .trauma-indicator::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, rgba(153, 0, 255, 0.5), transparent);
    transform: translateX(-100%);
    transition: transform 0.3s ease;
  }
  
  .trauma-indicator:hover::before {
    transform: translateX(100%);
  }
  
  .lore-cortex {
    position: relative;
  }
  
  .product-lore {
    font-family: 'Georgia', serif;
    font-style: italic;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.8);
  }
  
  .font-cyber {
    font-family: 'Courier New', monospace;
    letter-spacing: 1px;
  }
  
  .depth-fill {
    background: linear-gradient(90deg, rgba(153, 0, 255, 0.5), rgba(153, 0, 255, 0.9));
  }
  
  /* Product tabs */
  .tabs-header {
    display: flex;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .tab-button {
    padding: 0.5rem 1rem;
    background: transparent;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    font-family: 'Courier New', monospace;
    font-size: 0.9rem;
    cursor: pointer;
    position: relative;
    transition: all 0.3s ease;
  }
  
  .tab-button::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;
    height: 1px;
    background: rgba(153, 0, 255, 0.7);
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }
  
  .tab-button.active {
    color: rgba(153, 0, 255, 0.9);
  }
  
  .tab-button.active::after {
    transform: scaleX(1);
  }
  
  .tab-panel {
    display: none;
    padding: 1rem;
    background: rgba(10, 0, 20, 0.3);
    border-radius: 0 0 4px 4px;
  }
  
  .tab-panel.active {
    display: block;
  }
  
  /* Technical specs */
  .technical-specs {
    font-family: 'Courier New', monospace;
    font-size: 0.9rem;
    line-height: 1.6;
  }
  
  .spec-line {
    display: flex;
    justify-content: space-between;
    border-bottom: 1px dashed rgba(255, 255, 255, 0.1);
    padding: 0.5rem 0;
  }
  
  .spec-name {
    color: rgba(153, 0, 255, 0.8);
  }
  
  /* Trauma analysis */
  .trauma-analysis {
    display: grid;
    grid-template-columns: 120px 1fr;
    gap: 1rem;
  }
  
  .trauma-map {
    height: 120px;
    background: rgba(10, 0, 20, 0.5);
    border-radius: 4px;
    position: relative;
    overflow: hidden;
  }
  
  .trauma-map::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, rgba(153, 0, 255, 0.2) 0%, transparent 70%);
    animation: pulse 4s infinite alternate ease-in-out;
  }
  
  @keyframes pulse {
    0% { opacity: 0.3; transform: scale(0.8); }
    100% { opacity: 0.7; transform: scale(1.2); }
  }
  
  /* Dimensional analysis */
  .depth-visualization {
    display: flex;
    gap: 1rem;
  }
  
  .depth-layers {
    display: flex;
    flex-direction: column;
    gap: 4px;
    width: 120px;
  }
  
  .depth-layer {
    height: 20px;
    background: rgba(20, 0, 30, 0.5);
    border-radius: 2px;
    position: relative;
    overflow: hidden;
    opacity: 0.3;
  }
  
  .depth-layer.active {
    opacity: 1;
    background: rgba(153, 0, 255, 0.3);
  }
  
  .depth-layer.active::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 40%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(153, 0, 255, 0.8), transparent);
    animation: shimmer 2s infinite;
  }
  
  .depth-layer:nth-child(2).active::before {
    animation-delay: 0.5s;
  }
  
  .depth-layer:nth-child(3).active::before {
    animation-delay: 1s;
  }
  
  @keyframes shimmer {
    0% { transform: translateX(0); }
    100% { transform: translateX(350%); }
  }
  
  .depth-description {
    flex: 1;
  }
  
  /* Testimonials Styling */
  .testimonials-container {
    position: relative;
  }
  
  .testimonial-card {
    position: relative;
    overflow: hidden;
  }
  
  .testimonial-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(153, 0, 255, 0.7), transparent);
    transform: translateX(-100%);
  }
  
  .testimonial-card:hover::before {
    transform: translateX(100%);
    transition: transform 1s ease;
  }
  
  .testimonial-card .star {
    color: rgba(255, 255, 255, 0.3);
    margin-right: 1px;
  }
  
  .testimonial-card .star.active {
    color: rgba(153, 0, 255, 0.9);
  }
  
  .leave-review-btn {
    position: relative;
    overflow: hidden;
  }
  
  .leave-review-btn::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }
  
  .leave-review-btn:hover::after {
    left: 100%;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Tab functionality
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabPanels = document.querySelectorAll('.tab-panel');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons and panels
        tabButtons.forEach(b => b.classList.remove('active'));
        tabPanels.forEach(p => p.classList.remove('active'));
        
        // Add active class to clicked button and corresponding panel
        button.classList.add('active');
        const panelId = button.dataset.tab;
        document.querySelector(`.tab-panel[data-panel="${panelId}"]`).classList.add('active');
      });
    });
    
    // Glitch effect on trauma indicators
    const traumaIndicators = document.querySelectorAll('[data-glitch-on-hover="true"]');
    
    traumaIndicators.forEach(indicator => {
      indicator.addEventListener('mouseenter', () => {
        // Trigger glitch effect via NeuralBus if available
        if (window.NeuralBus) {
          window.NeuralBus.publish('glitch:trigger', {
            intensity: 0.4,
            duration: 300,
            target: indicator
          });
        }
      });
    });
    
    // Notify NeuralBus of product view
    if (window.NeuralBus) {
      const productId = document.querySelector('.product-nexus').dataset.productId;
      const traumaCodes = [];
      
      document.querySelectorAll('.trauma-indicator').forEach(indicator => {
        traumaCodes.push(indicator.textContent.trim());
      });
      
      window.NeuralBus.publish('product:view', {
        productId: productId,
        traumaCodes: traumaCodes,
        source: 'product-template',
        timestamp: Date.now()
      });
    }
    
    // Review form functionality
    const leaveReviewBtn = document.querySelector('.leave-review-btn');
    if (leaveReviewBtn) {
      leaveReviewBtn.addEventListener('click', function() {
        // Notify NeuralBus of review form opening
        if (window.NeuralBus) {
          window.NeuralBus.publish('review:formOpen', {
            productId: document.querySelector('.product-nexus').dataset.productId,
            source: 'product-template',
            timestamp: Date.now()
          });
        }
        
        // Open review modal (implementation would depend on your modal system)
        if (window.openModal) {
          window.openModal('review-form');
        }
      });
    }
  });
</script>

{% schema %}
{
  "name": "Product Template",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_trauma_coding",
      "label": "Enable Trauma-Coding",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_dimensional_depth",
      "label": "Enable Dimensional Depth",
      "default": true
    }
  ]
}
{% endschema %}