/**
 * THEME.JS
 * Main theme script for VoidBloom Designs
 * Version: 3.1.0
 * @MutationCompatible: All Variants
 * @StrategyProfile: quantum-entangled
 * Generated by VoidBloom Neural Forge v3.1.0
 */

(function(window, document) {
  'use strict';

  // ===========================================================================
  // CONFIGURATION
  // ===========================================================================
  const config = {
    navSelector: '.nav-menu',
    navItemWithDropdown: '.nav-item.has-dropdown',
    dropdownSelector: '.dropdown-menu',
    mobileMenuToggle: '.menu-toggle',
    mobileMenuDrawer: '#MobileMenuDrawer',
    cartToggleSelector: '.cart-action',
    cartDrawerSelector: '#CartDrawer',
    glitchLevel: 0.7,
    quantumScriptsRoot: '/assets',
    debug: window.location.search.includes('debug=true')
  };

  // ===========================================================================
  // UTILITIES
  // ===========================================================================
  const log = (...args) => {
    if (config.debug) console.log('[Theme]', ...args);
  };

  // ===========================================================================
  // NAVIGATION DROPDOWNS
  // ===========================================================================
  function initDesktopDropdowns() {
    const nav = document.querySelector(config.navSelector);
    if (!nav) {
      log('No nav element found for dropdowns.');
      return;
    }

    const items = nav.querySelectorAll(config.navItemWithDropdown);
    if (!items.length) {
      log('No dropdown menu items found. Check your nav structure and CSS classes.');
      return;
    }

    items.forEach(item => {
      const trigger = item.querySelector('a');
      const menu = item.querySelector(config.dropdownSelector);
      if (!trigger || !menu) return;

      item.addEventListener('mouseenter', () => menu.classList.add('open'));
      item.addEventListener('mouseleave', () => menu.classList.remove('open'));
    });

    log('Desktop dropdowns initialized.');
  }

  // ===========================================================================
  // MOBILE MENU
  // ===========================================================================
  function initMobileMenu() {
    const toggle = document.querySelector(config.mobileMenuToggle);
    const drawer = document.querySelector(config.mobileMenuDrawer);
    if (!toggle || !drawer) {
      log('Mobile menu toggle or drawer missing.');
      return;
    }

    toggle.addEventListener('click', () => {
      const expanded = toggle.getAttribute('aria-expanded') === 'true';
      toggle.setAttribute('aria-expanded', String(!expanded));
      drawer.setAttribute('aria-hidden', String(expanded));
      drawer.classList.toggle('open');
    });

    log('Mobile menu initialized.');
  }

  // ===========================================================================
  // CART DRAWER
  // ===========================================================================
  function initCartDrawer() {
    const toggles = document.querySelectorAll(config.cartToggleSelector);
    const drawer = document.querySelector(config.cartDrawerSelector);
    if (!toggles.length || !drawer) {
      log('Cart drawer toggle or drawer missing.');
      return;
    }

    toggles.forEach(btn => {
      btn.addEventListener('click', () => {
        const isOpen = drawer.classList.toggle('open');
        document.body.classList.toggle('cart-drawer-open', isOpen);
      });
    });

    log('Cart drawer initialized.');
  }

  // ===========================================================================
  // GLITCH EFFECT
  // ===========================================================================
  function initGlitchEffect() {
    if (typeof window.GlitchEngine !== 'object') {
      log('GlitchEngine not found.');
      return;
    }
    window.GlitchEngine.initialize({ level: config.glitchLevel });
    log('Glitch effect initialized with level:', config.glitchLevel);
  }

  // ===========================================================================
  // QUANTUM LAYER SCRIPTS
  // ===========================================================================
  function loadQuantumScript(name) {
    const script = document.createElement('script');
    script.src = `${config.quantumScriptsRoot}/${name}`;
    script.async = true;
    script.onload = () => log(`${name} loaded`);
    script.onerror = () => log(`Failed to load ${name}`);
    document.head.appendChild(script);
  }

  function initQuantumBus() {
    loadQuantumScript('neural-bus.js');
  }

  function initQuantumVisualizer() {
    loadQuantumScript('quantum-visualizer.js');
  }

  // ===========================================================================
  // INITIALIZATION
  // ===========================================================================
  document.addEventListener('DOMContentLoaded', () => {
    log('Theme JS initialization started.');
    initDesktopDropdowns();
    initMobileMenu();
    initCartDrawer();
    initGlitchEffect();
    initQuantumBus();
    initQuantumVisualizer();
    log('Theme JS initialization complete.');
  });

})(window, document);
