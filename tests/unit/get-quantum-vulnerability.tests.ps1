Describe "Get-QuantumVulnerability Tests" {
    Context "Vulnerability Detection" {
        BeforeEach {
            # Mock dependencies
            Mock Get-QuantumRegistry {
                $mockRegistry = @{}
                $mockRegistry.components = @{}
                $mockRegistry.components["secure-component"] = @{}
                $mockRegistry.components["secure-component"]["status"] = "active"
                $mockRegistry.components["secure-component"]["integrityScore"] = 0.98
                $mockRegistry.components["secure-component"]["lastScan"] = (Get-Date).AddDays(-1).ToString("o")
                
                $mockRegistry.components["vulnerable-component"] = @{}
                $mockRegistry.components["vulnerable-component"]["status"] = "active"
                $mockRegistry.components["vulnerable-component"]["integrityScore"] = 0.42
                $mockRegistry.components["vulnerable-component"]["lastScan"] = (Get-Date).AddDays(-7).ToString("o")
                
                $mockRegistry.components["critical-component"] = @{}
                $mockRegistry.components["critical-component"]["status"] = "active"
                $mockRegistry.components["critical-component"]["integrityScore"] = 0.12
                $mockRegistry.components["critical-component"]["lastScan"] = (Get-Date).AddDays(-30).ToString("o")
                
                return $mockRegistry
            }
            
            # Import the script to test - do this in BeforeEach for Pester v3
            . "$PSScriptRoot\..\..\Get-QuantumVulnerability.ps1"
        }
        
        It "Should detect vulnerable components" {
            $result = Get-QuantumVulnerability -Threshold 0.5
            
            $result | Should -Not -BeNullOrEmpty
            $result.Count | Should -Be 2
            $result[0].componentId | Should -Be "vulnerable-component"
            $result[1].componentId | Should -Be "critical-component"
        }
        
        It "Should identify critical vulnerabilities correctly" {
            $result = Get-QuantumVulnerability -Threshold 0.2 -Critical
            
            $result | Should -Not -BeNullOrEmpty
            $result.Count | Should -Be 1
            $result[0].componentId | Should -Be "critical-component"
            $result[0].severity | Should -Be "Critical"
        }
        
        It "Should flag outdated scans" {
            $result = Get-QuantumVulnerability -MaxScanAge 5
            
            $result | Should -Not -BeNullOrEmpty
            $result.Count | Should -BeGreaterThan 1
            $result | Where-Object { $_.componentId -eq "critical-component" } | Select-Object -ExpandProperty outdatedScan | Should -Be $true
        }
    }
}