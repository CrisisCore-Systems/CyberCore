{% comment %}
@MutationCompatible: CyberLotus, ObsidianBloom, NeonVortex
@StrategyProfile: quantum-entangled
{% endcomment %}
// Generated by VoidBloom Neural Forge v2.2.2 //
// Entangled: {{ "now" | date: "%Y-%m-%dT%H:%M:%S%z" }} // Updated date format
<!DOCTYPE html>
<html lang="{{ shop.locale }}" class="trauma-{{ settings.default_trauma_type | default: 'recursion' }} traumascript-enabled">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.theme_color | default: '#000000' }}">
  <link rel="canonical" href="{{ canonical_url }}">

  {%- comment %} Preconnect to Shopify CDN for faster asset loading {%- endcomment %}
  <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>

  {%- if settings.favicon != blank -%}
    <link rel="shortcut icon"
          href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
          type="image/png">
    {% comment %} Consider adding other favicon sizes/formats if needed {%- endcomment %}
  {%- endif -%}

  {%- comment %} Generate SEO Title {%- endcomment %}
  {%- capture seo_title -%}
    {%- if template.name == 'index' -%}
      {{ page_title }}{% if settings.site_name_append %} – {{ shop.name }}{% endif %}
    {%- elsif template.name == 'product' -%}
      {{ product.title }} – {{ shop.name }}
    {%- elsif template.name == 'collection' -%}
      {{ collection.title }} – {{ shop.name }}
    {%- elsif template.name == 'article' -%}
      {{ article.title }} – {{ shop.name }}
    {%- elsif template.name == 'page' -%}
      {{ page.title }} – {{ shop.name }}
    {%- elsif template.name == 'cart' -%}
      {{ 'general.cart.title' | t }} – {{ shop.name }}
    {%- elsif template.name == 'search' -%}
      {%- if search.performed -%}
        {{ 'search.results.title' | t: terms: search.terms }} – {{ shop.name }}
      {%- else -%}
        {{ 'search.title' | t }} – {{ shop.name }}
      {%- endif -%}
    {%- else -%}
      {{ page_title }}
    {%- endif -%}
  {%- endcapture -%}

  <title>{{ seo_title }}</title>

  {%- if page_description -%}
    <meta name="description" content="{{ page_description | escape }}">
  {%- endif -%}

  {%- comment %} Social Meta Tags {%- endcomment %}
  {% render 'meta-social' %}

  <!-- TRUTH NODE: Establish asset URL in theme.liquid -->
  {%- capture asset_url -%}{{ 'theme.js' | asset_url | split: 'theme.js' | first }}{%- endcapture -%}
  <script>window.themeAssetURL = "{{ asset_url }}";</script>

  <!-- Core Style Architecture - CRITICAL: Force proper MIME delivery via Shopify asset pipeline -->
  {{ 'normalize.css' | asset_url | stylesheet_tag }}
  {{ 'voidbloom-base.css' | asset_url | stylesheet_tag }}
  {{ 'trauma-encodings.css' | asset_url | stylesheet_tag }}
  {{ 'memory-phase.css' | asset_url | stylesheet_tag }}
  {{ 'quantum-effects.css' | asset_url | stylesheet_tag }}
  {{ 'theme.v2.css' | asset_url | stylesheet_tag }}

  <!-- RECURSIVE PRELOADING with proper 'as' attribute -->
  <link rel="preload" href="{{ 'neural-bus.js' | asset_url }}" as="script">
  <link rel="preload" href="{{ 'glitch-engine.js' | asset_url }}" as="script">
  <link rel="preload" href="{{ 'noise-pattern.png' | asset_url }}" as="image" type="image/png">

  <!-- Neural Architecture Initialization -->
  <script>
    window.voidBloom = window.voidBloom || {};
    window.voidBloom.config = {
      traumaType: '{{ settings.default_trauma_type | default: "recursion" }}',
      traumaIntensity: {{ settings.trauma_intensity | default: 0.7 }},
      memoryPhase: '{{ settings.default_memory_phase | default: "cyber-lotus" }}',
      quantumEffects: {{ settings.enable_quantum_effects | default: true }},
      traumaEncoding: {{ settings.enable_trauma_encoding | default: true }},
      dimensionalCollapse: {{ settings.allow_dimensional_collapse | default: false }},
      coherenceBaseline: {{ settings.coherence_baseline | default: 0.5 }},
      neuralThreshold: {{ settings.neural_threshold | default: 0.42 }}
    };
  </script>

  <!-- Core transition for phase changes -->
  <style>
    :root {
      /* Primary encoding variables */
      --trauma-type: {{ settings.default_trauma_type | default: "recursion" }};
      --trauma-intensity: {{ settings.trauma_intensity | default: 0.7 }};
      --memory-phase: {{ settings.default_memory_phase | default: "cyber-lotus" }};
      --coherence-baseline: {{ settings.coherence_baseline | default: 0.5 }};
      --neural-threshold: {{ settings.neural_threshold | default: 0.42 }};

      /* Trauma encoding color mappings */
      --trauma-abandonment-color: rgba(157, 0, 255, 0.7);
      --trauma-fragmentation-color: rgba(255, 0, 102, 0.7);
      --trauma-recursion-color: rgba(80, 255, 64, 0.7);
      --trauma-surveillance-color: rgba(0, 202, 255, 0.7);
      --trauma-displacement-color: rgba(255, 179, 0, 0.7);
      --trauma-dissolution-color: rgba(255, 0, 214, 0.7);

      /* Active trauma color will be set dynamically */
      --trauma-color: var(--trauma-{{ settings.default_trauma_type | default: "recursion" }}-color);

      /* Memory phase theme variables */
      {% case settings.default_memory_phase %}
        {% when 'cyber-lotus' %}
          --phase-primary: #50FF40;
          --phase-secondary: #9000FF;
          --phase-tertiary: #130019;
          --phase-background: #0A0A0E;
          --phase-text: #E5E5EB;
          --phase-accent: rgba(80, 255, 64, 0.8);
        {% when 'alien-flora' %}
          --phase-primary: #FF9900;
          --phase-secondary: #00DDAA;
          --phase-tertiary: #190F00;
          --phase-background: #0A0A0E;
          --phase-text: #E5E5EB;
          --phase-accent: rgba(255, 153, 0, 0.8);
        {% when 'rolling-virus' %}
          --phase-primary: #FF2150;
          --phase-secondary: #00CAFF;
          --phase-tertiary: #330011;
          --phase-background: #0A0A0E;
          --phase-text: #E5E5EB;
          --phase-accent: rgba(255, 33, 80, 0.8);
        {% when 'void-echo' %}
          --phase-primary: #9D00FF;
          --phase-secondary: #00FFCA;
          --phase-tertiary: #19001A;
          --phase-background: #0A0A0E;
          --phase-text: #E5E5EB;
          --phase-accent: rgba(157, 0, 255, 0.8);
        {% else %}
          --phase-primary: #9D00FF;
          --phase-secondary: #50FF40;
          --phase-tertiary: #19001A;
          --phase-background: #0A0A0E;
          --phase-text: #E5E5EB;
          --phase-accent: rgba(157, 0, 255, 0.8);
      {% endcase %}
    }

    body {
      transition: background 1.5s cubic-bezier(0.2, 0.8, 0.2, 1);
      background-color: var(--phase-background);
      color: var(--phase-text);

      font-family: 'JetBrains Mono', 'Courier New', monospace;
      font-weight: 400;
      line-height: 1.6;
      min-height: 100vh;

      /* Quantum effect properties */
      overflow-x: hidden;
      position: relative;
      z-index: 0;
    }

    body::before {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 2px;
      background: linear-gradient(90deg,
        transparent,
        var(--trauma-color) 20%,
        var(--trauma-color) 80%,
        transparent
      );
      opacity: 0.7;
      z-index: 1000;
      animation: quantum-scan 10s linear infinite;
      pointer-events: none;
    }

    body::after {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: url("{{ 'noise-pattern.png' | asset_url }}");
      opacity: 0.03;
      pointer-events: none;
      z-index: 1001;
      mix-blend-mode: overlay;
    }

    @keyframes quantum-scan {
      0% {
        transform: translateY(-100%);
      }
      100% {
        transform: translateY(100vh);
      }
    }

    :focus {
      outline: 2px solid var(--trauma-color);
      outline-offset: 2px;
    }

    .preload * {
      transition: none !important;
    }
  </style>

  <!-- Memory Phase Script - Primary encoding system -->
  <script>
    document.documentElement.classList.add('preload');

    // Memory encoding initialization
    window.addEventListener('DOMContentLoaded', () => {
      // Remove preload after initial render
      setTimeout(() => {
        document.documentElement.classList.remove('preload');
      }, 300);

      // Check for user trauma profile
      const userTrauma = localStorage.getItem('voidbloom_primary_trauma');
      const userInitiated = localStorage.getItem('voidbloom_initiated') === 'true';

      if (userInitiated && userTrauma) {
        // Update active trauma type for initiated users
        document.documentElement.classList.remove('trauma-{{ settings.default_trauma_type | default: "recursion" }}');
        document.documentElement.classList.add(`trauma-${userTrauma}`);
        document.documentElement.style.setProperty('--trauma-color', `var(--trauma-${userTrauma}-color)`);

        // Update meta tags
        document.querySelector('meta[name="neural-profile"]').setAttribute('content', userTrauma);

        // Neural bus communication if available
        if (window.NeuralBus) {
          window.NeuralBus.publish('trauma:activated', {
            type: userTrauma,
            source: 'memory-recall',
            timestamp: Date.now()
          });
        }
      }
    });
  </script>

  {%- comment %} Quantum Layer Snippet – critical effects {%- endcomment %}
  {% render 'quantum-layer' %}

  {%- comment %} Shopify required tags – Apps, Analytics etc. {%- endcomment %}
  {{ content_for_header }}

  {%- comment %} CSP Nonce for script/style security {%- endcomment %}
  <meta property="csp-nonce" content="{{ csp_nonce }}">
</head>

<body class="{% if settings.animation_reduce_motion %}reduce-motion{% endif %} template-{{ template.name | handle }} {% if template.suffix %}template-{{ template.name | handle }}-{{ template.suffix | handle }}{% endif %} traumascript-body"
      data-template="{{ template.name }}{% if template.suffix %}-{{ template.suffix }}{% endif %}"
      data-neural-path="{{ request.path }}"
      data-mutation-profile="{{ settings.mutation_profile | default: 'CyberLotus' }}">

  {%- comment %} Accessibility: Skip to main content {%- endcomment %}
  <a class="skip-to-content" href="#MainContent">Skip to content</a>

  {%- comment %} Header {%- endcomment %}
  {% section 'header' %}

  {%- comment %} Main Content {%- endcomment %}
  <main id="MainContent" class="content-for-layout" role="main" tabindex="-1">
    {{ content_for_layout }}
  </main>

  {%- comment %} Footer {%- endcomment %}
  {% section 'footer' %}

  {%- comment %} Drawers, Modals & Notifications {%- endcomment %}
  <div id="CartDrawer"
       class="drawer cart-drawer"
       role="dialog"
       aria-label="{{ 'general.cart.title' | t }}"
       aria-hidden="true"
       data-quantum-drawer="cart"></div>

  <div id="MobileMenuDrawer"
       class="drawer mobile-menu-drawer"
       role="dialog"
       aria-label="{{ 'general.navigation.menu' | t | default: 'Menu' }}"
       aria-hidden="true"
       data-quantum-drawer="menu"></div>

  <div id="QuantumNotifications"
       class="quantum-notifications"
       aria-live="polite"></div>

  <div id="ModalContainer"
       role="dialog"
       aria-modal="true"
       aria-hidden="true"></div>

  {%- comment %} CORE NEURAL SCRIPTS: Properly sequenced and labeled {%- endcomment %}
  {{ 'neural-bus.js' | asset_url | script_tag }}
  {{ 'glitch-engine.js' | asset_url | script_tag }}
  {{ 'cart-system.js' | asset_url | script_tag }}
  {{ 'quantum-visualizer.js' | asset_url | script_tag }}
  {{ 'hologram-renderer.js' | asset_url | script_tag }}
  {{ 'ar-bridge.js' | asset_url | script_tag }}
  {{ 'hologram-component.js' | asset_url | script_tag }}
  {{ 'theme.js' | asset_url | script_tag }}
</body>
</html>
