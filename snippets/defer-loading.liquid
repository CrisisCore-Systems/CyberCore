{% comment %}
  defer-loading.liquid
  Handles deferred loading of resources (scripts and styles)

  Parameters:
  - resource: URL of the resource to load
  - type: "script" or "style"
  - priority: optional, one of "high", "medium", "low" (defaults to "medium")
  - attributes: optional, JSON string of additional attributes to add
{% endcomment %}

{% liquid
  assign resource_url = resource | default: ''
  assign resource_type = type | default: 'script'
  assign resource_priority = priority | default: 'medium'
  assign resource_attributes = attributes | default: '{}'

  # Ensure we have a resource URL
  if resource_url == ''
    return
  endif
%}

{% if resource_type == 'script' %}
  <script type="application/json" data-script-definition>
    {
      "id": "{{ resource_url | handleize | replace: '-', '_' }}",
      "src": "{{ resource_url }}",
      "category": "{% if resource_priority == 'high' %}functional{% elsif resource_priority == 'low' %}nonEssential{% else %}functional{% endif %}",
      "attributes": {{ resource_attributes }}
    }
  </script>
{% elsif resource_type == 'style' %}
  <link rel="preload" href="{{ resource_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="{{ resource_url }}"></noscript>
  <script>
    // Fallback for browsers that don't support preload
    (function() {
      var link = document.createElement('link');
      link.rel = 'stylesheet';
      link.href = '{{ resource_url }}';
      link.media = 'print';
      link.setAttribute('data-deferred', 'true');
      document.head.appendChild(link);

      // Set media back to all after 250ms if supported
      setTimeout(function() {
        link.media = 'all';
      }, 250);
    })();
  </script>
{% endif %}
