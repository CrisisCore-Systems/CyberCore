{% comment %}
  FOOTER 
  Footer section for VoidBloom Memory Archive System
  
  @MutationCompatible: VoidBloom
  @StrategyProfile: quantum-entangled
  @Version: 1.0.0
{% endcomment %}

<footer class="voidbloom-footer" data-neural-node data-profile="VoidBloom">
  <div class="void-backdrop"></div>
  <div class="quantum-particles" id="footer-particles"></div>
  <div class="signal-lines"></div>
  
  <div class="footer-content">
    <div class="footer-brand">
      <div class="footer-logo">
        <h2 class="logo-text glitch-text" data-text="{{ shop.name | default: 'VoidBloom' }}">{{ shop.name | default: 'VoidBloom' }}</h2>
      </div>
      <div class="footer-tagline">{{ section.settings.tagline | default: 'Memory Acquisition Protocol' }}</div>
    </div>
    
    <div class="footer-grid">
      <!-- Navigation Links -->
      <div class="footer-column">
        <div class="column-title">{{ section.settings.nav_title | default: 'Neural Pathways' }}</div>
        
        {% if linklists[section.settings.footer_menu] != blank %}
          <ul class="column-menu">
            {% for link in linklists[section.settings.footer_menu].links %}
              <li class="menu-item">
                <a href="{{ link.url }}" class="menu-link">{{ link.title }}</a>
              </li>
            {% endfor %}
          </ul>
        {% else %}
          <ul class="column-menu">
            <li class="menu-item">
              <a href="/collections/all" class="menu-link">All Memory Artifacts</a>
            </li>
            <li class="menu-item">
              <a href="/pages/about" class="menu-link">About the Void</a>
            </li>
            <li class="menu-item">
              <a href="/pages/protocol" class="menu-link">Integration Protocol</a>
            </li>
            <li class="menu-item">
              <a href="/pages/contact" class="menu-link">Neural Contact</a>
            </li>
          </ul>
        {% endif %}
      </div>
      
      <!-- Hologrid Cells -->
      <div class="hologrid-container">
        <!-- Dynamic lore fragments or system data -->
        {% if section.blocks.size > 0 %}
          {% for block in section.blocks %}
            {% if block.type == 'hologrid_cell' %}
              {% render 'hologrid-cell', 
                title: block.settings.title, 
                content: block.settings.content, 
                type: block.settings.cell_type, 
                size: block.settings.cell_size, 
                depth: block.settings.cell_depth, 
                link: block.settings.link_url, 
                link_text: block.settings.link_text, 
                id: block.id
              %}
            {% endif %}
          {% endfor %}
        {% else %}
          <!-- Default cells if no blocks configured -->
          {% capture system_status_content %}
            <div class="status-item">
              <div class="status-label">Neural Sync</div>
              <div class="status-value">{{ "now" | date: "%H:%M:%S" }}</div>
            </div>
            <div class="status-item">
              <div class="status-label">Active Profile</div>
              <div class="status-value">VoidBloom</div>
            </div>
            <div class="status-item">
              <div class="status-label">Flux Density</div>
              <div class="status-value">87.3%</div>
            </div>
          {% endcapture %}
          
          {% render 'hologrid-cell', 
            title: 'System Status', 
            content: system_status_content, 
            type: 'status', 
            size: 'large', 
            depth: '3' 
          %}
          
          {% capture lore_content %}
            <div class="lore-fragment">
              "The void consumes memory. The memory produces trauma. The trauma manifests form."
            </div>
          {% endcapture %}
          
          {% render 'hologrid-cell', 
            title: 'Lore Fragment #42', 
            content: lore_content, 
            type: 'lore', 
            size: 'medium', 
            depth: '2' 
          %}
          
          {% capture newsletter_content %}
            <div class="newsletter-form">
              <input type="email" placeholder="Enter neural signature" class="newsletter-input">
              <button class="newsletter-button">Subscribe</button>
            </div>
          {% endcapture %}
          
          {% render 'hologrid-cell', 
            title: 'Neural Transmission', 
            content: newsletter_content, 
            type: 'interactive', 
            size: 'medium', 
            depth: '1' 
          %}
        {% endif %}
      </div>
    </div>
    
    <div class="footer-bottom">
      <div class="copyright">
        &copy; {{ 'now' | date: '%Y' }} {{ shop.name | default: 'VoidBloom' }} | {{ section.settings.copyright_text | default: 'All memories reserved.' }}
      </div>
      
      {% if section.settings.show_social %}
        <div class="social-links">
          {% if settings.social_twitter_link != blank %}
            <a href="{{ settings.social_twitter_link }}" class="social-link" target="_blank" rel="noopener" aria-label="Twitter">
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>
              </svg>
            </a>
          {% endif %}
          
          {% if settings.social_instagram_link != blank %}
            <a href="{{ settings.social_instagram_link }}" class="social-link" target="_blank" rel="noopener" aria-label="Instagram">
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect>
                <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path>
                <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>
              </svg>
            </a>
          {% endif %}
          
          {% if settings.social_tiktok_link != blank %}
            <a href="{{ settings.social_tiktok_link }}" class="social-link" target="_blank" rel="noopener" aria-label="TikTok">
              <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M12 2v8.5L9.5 8.5v-2a2.5 2.5 0 0 1 2.5-2.5v-2M12 12v4a4 4 0 0 1-4 4 4 4 0 0 1-4-4 4 4 0 0 1 4-4"></path>
              </svg>
            </a>
          {% endif %}
        </div>
      {% endif %}
    </div>
  </div>
</footer>

<style>
  .voidbloom-footer {
    background: rgba(10, 0, 20, 0.95);
    color: rgba(255, 255, 255, 0.8);
    position: relative;
    padding: 4rem 2rem 2rem;
    overflow: hidden;
    z-index: 10;
  }
  
  .void-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba(10, 0, 20, 0.9), rgba(40, 0, 80, 0.4));
    z-index: -2;
  }
  
  .quantum-particles {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    opacity: 0.5;
  }
  
  .signal-lines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, rgba(153, 0, 255, 0.5), transparent);
    z-index: 1;
    opacity: 0.8;
  }
  
  .footer-content {
    max-width: 1440px;
    margin: 0 auto;
    position: relative;
    z-index: 2;
  }
  
  .footer-brand {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .logo-text {
    font-family: 'Courier New', monospace;
    font-size: 2rem;
    letter-spacing: 2px;
    margin: 0 0 0.5rem 0;
    position: relative;
    display: inline-block;
  }
  
  .glitch-text {
    position: relative;
    display: inline-block;
  }
  
  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
  }
  
  .glitch-text::before {
    animation: glitch-anim 5s infinite linear alternate-reverse;
    clip-path: polygon(0 0, 100% 0, 100% 35%, 0 35%);
    transform: translate(-0.04em, -0.04em);
    opacity: 0.8;
    color: rgba(255, 0, 255, 0.8);
  }
  
  .glitch-text::after {
    animation: glitch-anim-2 5s infinite linear alternate-reverse;
    clip-path: polygon(0 65%, 100% 65%, 100% 100%, 0 100%);
    transform: translate(0.04em, 0.04em);
    opacity: 0.8;
    color: rgba(0, 255, 255, 0.8);
  }
  
  .footer-tagline {
    font-family: 'Courier New', monospace;
    font-size: 1rem;
    color: rgba(153, 0, 255, 0.9);
    letter-spacing: 1px;
  }
  
  .footer-grid {
    display: grid;
    grid-template-columns: 1fr 3fr;
    gap: 2rem;
    margin-bottom: 3rem;
  }
  
  .footer-column {
    padding-right: 2rem;
  }
  
  .column-title {
    font-family: 'Courier New', monospace;
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
    color: rgba(153, 0, 255, 0.9);
    position: relative;
    padding-bottom: 0.5rem;
  }
  
  .column-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 40px;
    height: 1px;
    background: rgba(153, 0, 255, 0.5);
  }
  
  .column-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .menu-item {
    margin-bottom: 0.75rem;
  }
  
  .menu-link {
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
    transition: all 0.2s ease;
    position: relative;
    display: inline-block;
    padding-left: 0.75rem;
  }
  
  .menu-link::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    width: 4px;
    height: 4px;
    background: rgba(153, 0, 255, 0.7);
    border-radius: 50%;
    transform: translateY(-50%);
    transition: all 0.2s ease;
  }
  
  .menu-link:hover {
    color: rgba(153, 0, 255, 0.9);
    transform: translateX(5px);
  }
  
  .menu-link:hover::before {
    background: rgba(153, 0, 255, 0.9);
    width: 6px;
    height: 6px;
  }
  
  .hologrid-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
  }
  
  /* Hologrid Cell styles */
  .hologrid-cell {
    position: relative;
    background: rgba(153, 0, 255, 0.05);
    border: 1px solid rgba(153, 0, 255, 0.2);
    border-radius: 8px;
    padding: 1.25rem;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .hologrid-cell:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(153, 0, 255, 0.1);
    border-color: rgba(153, 0, 255, 0.4);
  }
  
  .hologrid-cell.small {
    min-height: 150px;
  }
  
  .hologrid-cell.medium {
    min-height: 200px;
  }
  
  .hologrid-cell.large {
    min-height: 250px;
    grid-column: span 2;
  }
  
  .cell-title {
    font-family: 'Courier New', monospace;
    font-size: 1.1rem;
    margin-bottom: 1rem;
    color: rgba(153, 0, 255, 0.9);
  }
  
  .cell-body {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    line-height: 1.5;
  }
  
  .cell-frame {
    position: relative;
    z-index: 2;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .cell-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .cell-depth {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 1;
  }
  
  .depth-1 {
    border-top: 1px solid rgba(153, 0, 255, 0.5);
  }
  
  .depth-2 {
    border-top: 2px solid rgba(153, 0, 255, 0.7);
    border-bottom: 1px solid rgba(153, 0, 255, 0.5);
  }
  
  .depth-3 {
    border: 1px solid rgba(153, 0, 255, 0.7);
    box-shadow: 0 0 10px rgba(153, 0, 255, 0.3) inset;
  }
  
  .cell-connector {
    position: absolute;
    top: -1px;
    left: 50%;
    width: 1px;
    height: 20px;
    background: rgba(153, 0, 255, 0.3);
    transform: translateX(-50%);
  }
  
  .cell-connector::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: rgba(153, 0, 255, 0.3);
    transform: translate(-50%, -50%);
  }
  
  .cell-glow {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, rgba(153, 0, 255, 0.05) 0%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 0;
  }
  
  .hologrid-cell:hover .cell-glow {
    opacity: 1;
  }
  
  .cell-link {
    margin-top: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    text-decoration: none;
    color: rgba(153, 0, 255, 0.8);
    font-size: 0.9rem;
    padding-top: 1rem;
    margin-top: 1rem;
    border-top: 1px solid rgba(153, 0, 255, 0.2);
    transition: all 0.2s ease;
  }
  
  .cell-link:hover {
    color: rgba(153, 0, 255, 1);
  }
  
  /* Status cell specific styling */
  .hologrid-cell.status .status-item {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.75rem;
    font-size: 0.9rem;
  }
  
  .hologrid-cell.status .status-label {
    color: rgba(255, 255, 255, 0.6);
  }
  
  .hologrid-cell.status .status-value {
    color: rgba(153, 0, 255, 0.9);
    font-family: 'Courier New', monospace;
  }
  
  /* Lore cell specific styling */
  .hologrid-cell.lore .lore-fragment {
    font-style: italic;
    padding: 1rem;
    border-left: 2px solid rgba(153, 0, 255, 0.5);
    background: rgba(153, 0, 255, 0.05);
  }
  
  /* Interactive cell specific styling */
  .hologrid-cell.interactive .newsletter-form {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
  
  .newsletter-input {
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(153, 0, 255, 0.3);
    border-radius: 4px;
    color: rgba(255, 255, 255, 0.9);
    font-family: 'Courier New', monospace;
  }
  
  .newsletter-input:focus {
    outline: none;
    border-color: rgba(153, 0, 255, 0.7);
  }
  
  .newsletter-button {
    padding: 0.75rem;
    background: rgba(153, 0, 255, 0.2);
    border: 1px solid rgba(153, 0, 255, 0.5);
    border-radius: 4px;
    color: rgba(255, 255, 255, 0.9);
    font-family: 'Courier New', monospace;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .newsletter-button:hover {
    background: rgba(153, 0, 255, 0.3);
  }
  
  /* Footer bottom */
  .footer-bottom {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 2rem;
    border-top: 1px solid rgba(153, 0, 255, 0.2);
  }
  
  .copyright {
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.6);
  }
  
  .social-links {
    display: flex;
    gap: 1rem;
  }
  
  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: rgba(153, 0, 255, 0.1);
    border: 1px solid rgba(153, 0, 255, 0.3);
    color: rgba(255, 255, 255, 0.8);
    transition: all 0.2s ease;
  }
  
  .social-link:hover {
    background: rgba(153, 0, 255, 0.2);
    border-color: rgba(153, 0, 255, 0.5);
    transform: translateY(-2px);
  }
  
  /* Animations */
  @keyframes glitch-anim {
    0% { transform: translate(0); }
    20% { transform: translate(-2px, 1px); }
    40% { transform: translate(-1px, -1px); }
    60% { transform: translate(1px, 1px); }
    80% { transform: translate(-1px, -1px); }
    100% { transform: translate(0); }
  }
  
  @keyframes glitch-anim-2 {
    0% { transform: translate(0); }
    20% { transform: translate(2px, 1px); }
    40% { transform: translate(-1px, -1px); }
    60% { transform: translate(1px, -1px); }
    80% { transform: translate(1px, -2px); }
    100% { transform: translate(0); }
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .footer-grid {
      grid-template-columns: 1fr;
    }
    
    .hologrid-cell.large {
      grid-column: auto;
    }
    
    .footer-column {
      padding-right: 0;
    }
    
    .footer-bottom {
      flex-direction: column;
      gap: 1rem;
      text-align: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Quantum Visualizer for particles if available
    if (window.QuantumVisualizer) {
      const footerParticles = new QuantumVisualizer({
        container: document.getElementById('footer-particles'),
        particleCount: 50,
        colorScheme: 'VoidBloom',
        dimensions: '2d',
        fractalMode: false
      });
      
      // Generate some initial quantum state data
      const initialData = Array(10).fill().map((_, i) => ({
        id: 'fp' + i,
        state: Math.random() > 0.5 ? 'superposition' : 'entangled',
        probability: Math.random(),
        profile: 'VoidBloom'
      }));
      
      footerParticles.update(initialData);
    }
    
    // Connect to NeuralBus if available
    if (window.NeuralBus) {
      // Register footer with NeuralBus
      if (NeuralBus.register) {
        NeuralBus.register('voidbloom-footer', {
          version: '1.0.0',
          profile: 'VoidBloom'
        });
      }
      
      // Subscribe to quantum mutation events
      NeuralBus.subscribe('quantum:mutation', data => {
        if (data.profile === 'VoidBloom') {
          // Update the hologrid cells with subtle effects
          document.querySelectorAll('.hologrid-cell').forEach(cell => {
            const depth = parseInt(cell.getAttribute('data-depth') || '1');
            const intensity = (depth / 3) * (data.intensity || 0.5);
            
            // Add temporary glow effect
            cell.querySelector('.cell-glow').style.opacity = intensity;
            
            setTimeout(() => {
              cell.querySelector('.cell-glow').style.opacity = '0';
            }, 1000);
          });
        }
      });
      
      // Update real-time status in status cells if they exist
      setInterval(() => {
        document.querySelectorAll('.status-value').forEach(value => {
          if (value.textContent.includes(':')) {
            // Update time display
            value.textContent = new Date().toLocaleTimeString('en-US', {
              hour12: false,
              hour: '2-digit',
              minute: '2-digit',
              second: '2-digit'
            });
          }
        });
      }, 1000);
    }
  });
</script>

{% schema %}
{
  "name": "VoidBloom Footer",
  "settings": [
    {
      "type": "text",
      "id": "tagline",
      "label": "Footer Tagline",
      "default": "Memory Acquisition Protocol"
    },
    {
      "type": "text",
      "id": "nav_title",
      "label": "Navigation Title",
      "default": "Neural Pathways"
    },
    {
      "type": "link_list",
      "id": "footer_menu",
      "label": "Footer Menu",
      "info": "Shows footer navigation links"
    },
    {
      "type": "text",
      "id": "copyright_text",
      "label": "Copyright Text",
      "default": "All memories reserved."
    },
    {
      "type": "checkbox",
      "id": "show_social",
      "label": "Show Social Links",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "hologrid_cell",
      "name": "Hologrid Cell",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Cell Title",
          "default": "Cell Title"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Cell Content",
          "default": "<p>Cell content goes here.</p>"
        },
        {
          "type": "select",
          "id": "cell_type",
          "label": "Cell Type",
          "options": [
            { "value": "info", "label": "Information" },
            { "value": "status", "label": "System Status" },
            { "value": "lore", "label": "Lore Fragment" },
            { "value": "interactive", "label": "Interactive" }
          ],
          "default": "info"
        },
        {
          "type": "select",
          "id": "cell_size",
          "label": "Cell Size",
          "options": [
            { "value": "small", "label": "Small" },
            { "value": "medium", "label": "Medium" },
            { "value": "large", "label": "Large" }
          ],
          "default": "medium"
        },
        {
          "type": "range",
          "id": "cell_depth",
          "min": 1,
          "max": 3,
          "step": 1,
          "label": "Depth Layer",
          "default": 1
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Link URL"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Link Text",
          "default": "Access"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "VoidBloom Footer",
      "category": "Footer"
    }
  ]
}
{% endschema %}